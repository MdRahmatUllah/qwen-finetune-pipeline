[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "qwen-finetune-pipeline"
version = "0.1.0"
description = "Complete pipeline for fine-tuning Qwen2.5-7B on custom PDFs and deploying to Ollama"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["qwen", "fine-tuning", "qlora", "llm", "pdf", "ollama", "docling"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "torch>=2.1.0",
    "transformers>=4.36.0",
    "trl>=0.7.0",
    "peft>=0.7.0",
    "accelerate>=0.25.0",
    "bitsandbytes>=0.41.0",
    "datasets>=2.15.0",
    "docling>=1.0.0",
    "docling-core>=1.0.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

flash = [
    "flash-attn>=2.3.0",
]

all = [
    "qwen-finetune-pipeline[dev,flash]",
]

[project.urls]
Homepage = "https://github.com/yourusername/qwen-finetune-pipeline"
Documentation = "https://github.com/yourusername/qwen-finetune-pipeline#readme"
Repository = "https://github.com/yourusername/qwen-finetune-pipeline"
Issues = "https://github.com/yourusername/qwen-finetune-pipeline/issues"

[project.scripts]
pdf-to-md = "scripts.01_pdf_to_md:main"
clean-md = "scripts.02_clean_md:main"
chunk-to-jsonl = "scripts.03_chunk_to_jsonl:main"
train-qlora = "scripts.04_train_qlora:main"
merge-lora = "scripts.05_merge_lora:main"

[tool.setuptools]
packages = ["scripts"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | data
  | models
  | llama.cpp
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "venv",
    "data",
    "models",
    "llama.cpp",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = [
    "data/",
    "models/",
    "llama.cpp/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

